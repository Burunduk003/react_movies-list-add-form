{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","newMovie","error","invalidImgUrl","invalidImdbUrl","handleError","Object","keys","forEach","setState","handleInputChange","target","name","value","validator","match","clearForm","handleSubmit","event","onAdd","props","preventDefault","values","some","this","onSubmit","htmlFor","classNames","type","id","onChange","disabled","err","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1732bc9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    newMovie: {\n      title: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    error: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n    invalidImgUrl: false,\n    invalidImdbUrl: false,\n  };\n\n  handleError = () => {\n    const { newMovie } = this.state;\n\n    Object.keys(newMovie).forEach(key => this.setState(state => ({\n      error: {\n        ...state.error,\n        [key]: !state.newMovie[key],\n      },\n    })));\n  }\n\n  handleInputChange = ({ target }) => {\n    this.setState(state => ({\n      newMovie: {\n        ...state.newMovie,\n        [target.name]: target.value,\n      },\n      error: {\n        ...state.error,\n        [target.name]: false,\n      },\n    }));\n    // eslint-disable-next-line\n    const validator = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (target.name === 'imgUrl') {\n      this.setState({\n        invalidImgUrl: false,\n      });\n    }\n\n    if (target.name === 'imgUrl' && !target.value.match(validator)) {\n      this.setState({\n        invalidImgUrl: true,\n      });\n    }\n\n    if (target.name === 'imdbUrl') {\n      this.setState({\n        invalidImdbUrl: false,\n      });\n    }\n\n    if (target.name === 'imdbUrl' && !target.value.match(validator)) {\n      this.setState({\n        invalidImdbUrl: true,\n      });\n    }\n  }\n\n  clearForm = () => {\n    const { newMovie } = this.state;\n\n    Object.keys(newMovie).forEach(key => this.setState(state => ({\n      newMovie: {\n        ...state.newMovie,\n        [key]: '',\n      },\n\n      error: {\n        ...state.error,\n        [key]: false,\n      },\n    })));\n  }\n\n  handleSubmit = (event) => {\n    const { newMovie } = this.state;\n    const { onAdd } = this.props;\n\n    event.preventDefault();\n    this.handleError();\n    if (!Object.values(newMovie).some(value => value === '')) {\n      onAdd(newMovie);\n      this.clearForm();\n    }\n  }\n\n  render() {\n    const { newMovie, error, invalidImgUrl, invalidImdbUrl } = this.state;\n\n    return (\n      <form\n        className=\"NewMovieForm\"\n        onSubmit={event => this.handleSubmit(event)}\n      >\n        <label\n          className=\"NewMovieForm__label\"\n          htmlFor=\"title\"\n        >\n          Please enter movie title:\n        </label>\n        <input\n          className={classNames('NewMovieForm__input', {\n            'NewMovieForm__input--error': error.title,\n          })}\n          name=\"title\"\n          type=\"text\"\n          id=\"title\"\n          value={newMovie.title}\n          onChange={this.handleInputChange}\n        />\n        {error.title && (\n          <p className=\"NewMovieForm__error\">\n            *Please enter the title\n          </p>\n        )}\n        <label\n          className=\"NewMovieForm__label\"\n          htmlFor=\"imgUrl\"\n        >\n          Please enter movie image link:\n        </label>\n        <input\n          className={classNames('NewMovieForm__input', {\n            'NewMovieForm__input--error': error.imgUrl || invalidImgUrl,\n          })}\n          name=\"imgUrl\"\n          type=\"text\"\n          id=\"imgUrl\"\n          value={newMovie.imgUrl}\n          onChange={this.handleInputChange}\n        />\n        {error.imgUrl && (\n          <p className=\"NewMovieForm__error\">\n            *Movie image link required\n          </p>\n        )}\n        {invalidImgUrl && (\n          <p className=\"NewMovieForm__error\">\n            *not valid link\n          </p>\n        )}\n        <label\n          className=\"NewMovieForm__label\"\n          htmlFor=\"imdbUrl\"\n        >\n          Please enter movie IMDB link:\n        </label>\n        <input\n          className={classNames('NewMovieForm__input', {\n            'NewMovieForm__input--error': error.imdbUrl || invalidImdbUrl,\n          })}\n          name=\"imdbUrl\"\n          type=\"text\"\n          id=\"imdbUrl\"\n          value={newMovie.imdbUrl}\n          onChange={this.handleInputChange}\n        />\n        {error.imdbUrl && (\n          <p className=\"NewMovieForm__error\">\n            *IMDB link required\n          </p>\n        )}\n        {invalidImdbUrl && (\n          <p className=\"NewMovieForm__error\">\n            *not valid link\n          </p>\n        )}\n        <label\n          className=\"NewMovieForm__label\"\n          htmlFor=\"imdbId\"\n        >\n          Please enter movie IMDB ID:\n        </label>\n        <input\n          className={classNames('NewMovieForm__input', {\n            'NewMovieForm__input--error': error.imdbId,\n          })}\n          name=\"imdbId\"\n          type=\"text\"\n          id=\"imdbId\"\n          value={newMovie.imdbId}\n          onChange={this.handleInputChange}\n        />\n        {error.imdbId && (\n          <p className=\"NewMovieForm__error\">\n            *IMDB ID required\n          </p>\n        )}\n        <label\n          className=\"NewMovieForm__label\"\n          htmlFor=\"description\"\n        >\n          Please add movie description:\n        </label>\n        <textarea\n          className=\"NewMovieForm__textarea\"\n          name=\"description\"\n          id=\"description\"\n          value={newMovie.description}\n          onChange={this.handleInputChange}\n        />\n        <button\n          className=\"NewMovieForm__button\"\n          type=\"submit\"\n          disabled={\n            Object.values(error).some(err => err === true)\n            || invalidImgUrl\n            || invalidImdbUrl\n          }\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}